# Generated by Django 4.2.13 on 2024-07-01 15:32

import cloudinary.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('art_collections', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Artpiece',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=70, unique=True)),
                ('description', models.TextField(blank=True, validators=[django.core.validators.MaxLengthValidator(180)])),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('art_medium', models.CharField(choices=[('noselection', 'No medium selected'), ('oil', 'Oil'), ('watercolour', 'Watercolour'), ('gouache', 'Gouache'), ('acrylic', 'Acrylic'), ('charcoal', 'Charcoal'), ('chalk', 'Chalk'), ('photography', 'Photography'), ('mixedmedia', 'Mixed media'), ('other', 'Other')], default=0, max_length=30)),
                ('for_sale', models.IntegerField(choices=[(0, 'Not for sale'), (1, 'For sale'), (2, 'Sold')], default=0)),
                ('art_collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collection_artpieces', to='art_collections.artcollection')),
                ('hashtags', models.ManyToManyField(blank=True, related_name='hashed_artpieces', to='artpieces.hashtag')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
    ]
